(window.theme = window.theme || {}),
  (window.theme = window.theme || {}),
  (theme.Sections = function () {
    (this.constructors = {}),
      (this.instances = []),
      $(document)
        .on("shopify:section:load", this._onSectionLoad.bind(this))
        .on("shopify:section:unload", this._onSectionUnload.bind(this))
        .on("shopify:section:select", this._onSelect.bind(this))
        .on("shopify:section:deselect", this._onDeselect.bind(this))
        .on("shopify:block:select", this._onBlockSelect.bind(this))
        .on("shopify:block:deselect", this._onBlockDeselect.bind(this));
  }),
  (theme.Sections.prototype = _.assignIn({}, theme.Sections.prototype, {
    _createInstance: function (e, t) {
      var n = $(e),
        i = n.attr("data-section-id"),
        o = n.attr("data-section-type");
      if (((t = t || this.constructors[o]), !_.isUndefined(t))) {
        var a = _.assignIn(new t(e), { id: i, type: o, container: e });
        this.instances.push(a);
      }
    },
    _onSectionLoad: function (e) {
      var t = $("[data-section-id]", e.target)[0];
      t && this._createInstance(t);
    },
    _onSectionUnload: function (e) {
      this.instances = _.filter(this.instances, function (t) {
        var n = t.id === e.detail.sectionId;
        return n && _.isFunction(t.onUnload) && t.onUnload(e), !n;
      });
    },
    _onSelect: function (e) {
      var t = _.find(this.instances, function (t) {
        return t.id === e.detail.sectionId;
      });
      !_.isUndefined(t) && _.isFunction(t.onSelect) && t.onSelect(e);
    },
    _onDeselect: function (e) {
      var t = _.find(this.instances, function (t) {
        return t.id === e.detail.sectionId;
      });
      !_.isUndefined(t) && _.isFunction(t.onDeselect) && t.onDeselect(e);
    },
    _onBlockSelect: function (e) {
      var t = _.find(this.instances, function (t) {
        return t.id === e.detail.sectionId;
      });
      !_.isUndefined(t) && _.isFunction(t.onBlockSelect) && t.onBlockSelect(e);
    },
    _onBlockDeselect: function (e) {
      var t = _.find(this.instances, function (t) {
        return t.id === e.detail.sectionId;
      });
      !_.isUndefined(t) &&
        _.isFunction(t.onBlockDeselect) &&
        t.onBlockDeselect(e);
    },
    register: function (e, t) {
      var n = this,
        i = e;
      $("[data-section-type=" + e + "]:not(.sc-registered)").each(
        function (o, a) {
          $(a).addClass("sc-registered"),
            "product" == e && _.isUndefined(t)
              ? $.getScriptCached(
                  theme.extensions.ktjs_product_sg,
                  function () {
                    (n.constructors[i] = theme.Product),
                      n._createInstance(a, theme.Product);
                  }
                )
              : ((this.constructors[e] = t), this._createInstance(a, t));
        }.bind(this)
      );
    },
  })),
  (theme.Images = (function () {
    return {
      preload: function (e, t) {
        "string" == typeof e && (e = [e]);
        for (var n = 0; n < e.length; n++) {
          var i = e[n];
          this.loadImage(this.getSizedImageUrl(i, t));
        }
      },
      loadImage: function (e) {
        new Image().src = e;
      },
      switchImage: function (e, t, n) {
        var i = this.imageSize(t.src),
          o = this.getSizedImageUrl(e.src, i);
        n ? n(o, e, t) : (t.src = o);
      },
      imageSize: function (e) {
        if (-1 != e.indexOf("@"))
          t = e.match(
            /.+_((?:pico|icon|thumb|small|compact|medium|large|grande)?\@\d{1,2}x|\d{1,4}x\d{0,4}?@\d{1,2}x|x\d{1,4}?\@\d{1,2}x)[_\.@]/
          );
        else
          var t = e.match(
            /.+_((?:pico|icon|thumb|small|compact|medium|large|grande)|\d{1,4}x\d{0,4}|x\d{1,4})[_\.@]/
          );
        return null !== t ? t[1] : null;
      },
      getSizedImageUrl: function (e, t) {
        if (null == t) return e;
        if ("master" === t) return this.removeProtocol(e);
        var n = e.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?$/i);
        if (null != n) {
          var i = e.split(n[0]),
            o = n[0];
          return this.removeProtocol(i[0] + "_" + t + o);
        }
        return null;
      },
      removeProtocol: function (e) {
        return e.replace(/http(s)?:/, "");
      },
      getName: function (e) {
        return _.last(e.split(/\.\w+\?/g)[0].split("/"));
      },
      imgFit: function (e, t, n, i) {
        var o = n || parseFloat(theme.strings.aspect_ratio.split("/")[0]),
          a = i || parseFloat(theme.strings.aspect_ratio.split("/")[1]),
          r = o / a,
          s = (1 * e) / t;
        return o < a
          ? e == t
            ? "nonheight_ nonwidth"
            : r >= s
            ? "nonheight"
            : "nonwidth"
          : o > a && e == t
          ? "nonheight nonwidth_"
          : r <= s
          ? "nonwidth"
          : "nonheight";
      },
    };
  })()),
  (theme.Currency = (function () {
    return {
      formatMoney: function (e, t) {
        function n(e, t, n, i) {
          if (
            ("KWD" == shopCry && (t = 3),
            (t = (function (e, t) {
              return void 0 === e ? 2 : e;
            })(t)),
            (n = n || ","),
            (i = i || "."),
            isNaN(e) || null == e)
          )
            return 0;
          var o = (e = (e / 100).toFixed(t)).split(".");
          return (
            o[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1" + n) +
            (o[1] ? i + o[1] : "")
          );
        }
        "string" == typeof e && (e = e.replace(".", ""));
        var i = "",
          o = /\{\{\s*(\w+)\s*\}\}/,
          a = t || theme.moneyFormat;
        switch (a.match(o)[1]) {
          case "amount":
            i = n(e, 2);
            break;
          case "amount_no_decimals":
            i = n(e, 0);
            break;
          case "amount_with_comma_separator":
            i = n(e, 2, ".", ",");
            break;
          case "amount_no_decimals_with_comma_separator":
            i = n(e, 0, ".", ",");
            break;
          case "amount_no_decimals_with_space_separator":
            i = n(e, 0, " ");
            break;
          case "amount_with_apostrophe_separator":
            i = n(e, 2, "'");
        }
        return a.replace(o, i);
      },
    };
  })()),
  (window.theme = theme || {}),
  (theme.getScrollbarWidth = function () {
    $("#getScrollbarWidth").length <= 0 &&
      $("body").append(
        '<div id="getScrollbarWidth" style="width:200px;height:150px;position:absolute;top:0;left:0;visibility:hidden;overflow:hidden;"><div id="getScrollbarWidthChild" style="width:100%;height:200px;">test</div></div>'
      );
    var e = $("#getScrollbarWidth"),
      t = $("#getScrollbarWidthChild"),
      n = e[0].offsetWidth;
    t.css("overflow", "scroll");
    return n - t[0].clientWidth;
  }),
  (window.theme = window.theme || {}),
  (theme.MenuReposive = (function () {
    var e,
      t = {
        body: "body",
        header: "#header",
        headerOntop: "#header-ontop",
        navigation: "#header .main-navigation",
        siteNavHasDropdown: ".mn-has-child",
        siteNavVertical: ".vertical-menu",
        subNavVertical: ".sub-mn-v",
      },
      n = { activeClass: "show-submn", verticalClass: "mn-ivt" };
    return {
      init: function () {
        0 == theme.is_mobile &&
          ($(document).on(
            "mouseenter",
            ".kt-nav " + t.siteNavHasDropdown,
            function () {
              0 == $(this).hasClass(n.activeClass) &&
                ($(this).addClass(n.activeClass),
                $(this).hasClass(n.verticalClass) &&
                  ("number" == typeof e && clearInterval(e),
                  $(t.subNavVertical).removeAttr("style"),
                  $(
                    t.subNavVertical + ".item-" + $(this).attr("data-block-id")
                  ).css({
                    opacity: 1,
                    visibility: "visible",
                    "pointer-events": "auto",
                  })));
            }
          ),
          $(document).on(
            "mouseleave",
            ".kt-nav " + t.siteNavHasDropdown,
            function () {
              $(this).hasClass(n.activeClass) &&
                $(this).removeClass(n.activeClass),
                (e = setInterval(function () {
                  $(t.subNavVertical).removeAttr("style"), clearInterval(e);
                }, 300));
            }
          ),
          $(document).on("mouseenter", t.subNavVertical, function () {
            "number" == typeof e && clearInterval(e);
          }),
          $(document).on("mouseleave", t.subNavVertical, function () {
            $(t.subNavVertical).removeAttr("style");
          }));
      },
      is_mobile: function () {
        var e = !1;
        return (
          /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Opera Mobile|Kindle|Windows Phone|PSP|AvantGo|Atomic Web Browser|Blazer|Chrome Mobile|Dolphin|Dolfin|Doris|GO Browser|Jasmine|MicroB|Mobile Firefox|Mobile Safari|Mobile Silk|Motorola Internet Browser|NetFront|NineSky|Nokia Web Browser|Obigo|Openwave Mobile Browser|Palm Pre web browser|Polaris|PS Vita browser|Puffin|QQbrowser|SEMC Browser|Skyfire|Tear|TeaShark|UC Browser|uZard Web|wOSBrowser|Yandex.Browser mobile/i.test(
            navigator.userAgent
          ) && (e = !0),
          e
        );
      },
      clone_header_ontop: function () {
        if (!($(window).width() >= 320))
          return $(t.headerOntop).removeClass("cloned").html(""), !1;
        if ($("#header-ontop .header").length > 0) return !1;
        if (
          $(t.header).length > 0 &&
          $(t.headerOntop).length > 0 &&
          $(t.headerOntop).hasClass("is-sticky") &&
          !$(t.headerOntop).hasClass("cloned")
        ) {
          $(t.headerOntop).addClass("cloned"),
            "function" == typeof Swiper &&
              $.each(
                $(t.header).find(".swiper-container-initialized"),
                function (e, t) {
                  this.swiper.destroy(!0, !0);
                }
              );
          var e = $(t.header).clone();
          e.removeAttr("id"),
            e.find(".not-sticky,style,script").remove(),
            e.find(".li--s").html(),
            e.find(".show").removeClass("show"),
            e.find(".box-search").removeClass("focus loaded"),
            e.appendTo(t.headerOntop),
            $(t.headerOntop + " [data-shopify-editor-block]").removeAttr(
              "data-shopify-editor-block"
            ),
            $(t.headerOntop).find(".dropdown-toggle").attr("aria-expanded", !1),
            theme.ResizeNavMega.init("header-ontop"),
            setTimeout(function () {
              theme.DropdownReposive.init(
                ".kt--drop-w",
                ".header-control .kt--drop-i",
                ".kt--drop-in"
              );
            }, 200),
            $(t.headerOntop).find(".swiper-container").length > 0 &&
              theme.SwiperSection('[data-section-type="header-section"]');
        } else
          setTimeout(function () {
            theme.DropdownReposive.init(
              ".kt--drop-w",
              ".header-control .kt--drop-i",
              ".kt--drop-in"
            );
          }, 200);
        theme.StickyMenu.init();
      },
      unload: function () {
        $(window).off(t.siteNavHasDropdown + " a"),
          $(t.siteNavHasDropdown).off(t.siteNavHasDropdown + " a"),
          $(t.body).off(t.siteNavHasDropdown + " a");
      },
    };
  })()),
  (window.theme = window.theme || {}),
  (theme.StickyMenu = (function () {
    function e() {
      (headerHeight = t.headerClassPropTop.outerHeight() || 0),
        currentScroll > headerOrgOffset &&
          a >= 320 &&
          !1 === i.hasClass("onsticky") &&
          (a >= 768
            ? t.headerClassPropTop.animate(
                {
                  "margin-top":
                    -1 * headerTopHeight + -1 * headerTopAnnouncement,
                },
                150
              )
            : t.headerClassPropTop.animate(
                { "margin-top": -1 * headerHeight - 10 },
                150
              ),
          i.addClass("onsticky")),
        currentScroll > headerOrgOffset &&
          (n > currentScroll + 80 &&
          o.hasClass("onsticky") &&
          !1 === i.hasClass("onup")
            ? (i.addClass("onup"),
              t.headerClassPropTop.animate({ "margin-top": 0 }, 150),
              $(".kt-stickyAddCart.fixed .position-fixed.top").css(
                "top",
                headerHeight
              ))
            : n <= currentScroll - 50 &&
              o.hasClass("onsticky") &&
              i.hasClass("onup") &&
              (i.removeClass("onup"),
              a >= 768
                ? t.headerClassPropTop.animate(
                    {
                      "margin-top":
                        -1 * headerTopHeight + -1 * headerTopAnnouncement,
                    },
                    150
                  )
                : (t.headerClassPropTop.animate(
                    { "margin-top": -1 * headerHeight - 10 },
                    150
                  ),
                  $(".kt-stickyAddCart.fixed .position-fixed.top").css(
                    "top",
                    0
                  )))),
        (n = currentScroll);
    }
    var t = {
        headerId: "#header",
        headerTop: ".header-top",
        headerAnnouncement: ".header-announcement:not(.none_sticky)",
        headerClassProp: ".header",
        stickyHeaderTop: "#header-ontop",
        headerClassPropTop: "",
      },
      n =
        (currentScroll =
        headerOrgOffset =
        wrapStickOrgOffset =
        headerHeight =
        headerTopHeight =
        headerTopAnnouncement =
          0),
      i = $("body"),
      o = $("body:not(.onhide)"),
      a = $(window).width(),
      r = ".close-header-announcement";
    return {
      init: function () {
        if ($(t.stickyHeaderTop + " " + t.headerClassProp).length <= 0)
          return !0;
        (t.headerClassPropTop = $("#header-ontop .header")),
          (headerOrgOffset =
            $(t.headerId).offset().top + 2 * $(t.headerId).outerHeight()),
          (wrapStickOrgOffset = $(t.headerId).offset().top),
          (headerHeight = t.headerClassPropTop.outerHeight() || 0),
          (headerTopHeight =
            $(t.stickyHeaderTop + " " + t.headerTop).outerHeight() || 0),
          (headerTopAnnouncement =
            $(t.stickyHeaderTop + " " + t.headerAnnouncement).outerHeight() ||
            0),
          $(t.headerId).length > 0 &&
            a >= 320 &&
            ($(window).scroll(function () {
              (currentScroll = $(window).scrollTop()),
                currentScroll <= headerOrgOffset &&
                  o.hasClass("onsticky") &&
                  i.removeClass("onsticky").removeClass("onup");
            }),
            $(window).scroll($.throttle(100, e)),
            $(window).resize(function () {
              (a = $(window).width()),
                (headerHeight = t.headerClassPropTop.outerHeight() || 0),
                (headerTopHeight =
                  $(t.stickyHeaderTop + " " + t.headerTop).outerHeight() || 0),
                (headerTopAnnouncement =
                  $(
                    t.stickyHeaderTop + " " + t.headerAnnouncement
                  ).outerHeight() || 0);
            })),
          $(r).length &&
            $(document).on("click", r, function (e) {
              headerTopAnnouncement = 0;
            });
      },
    };
  })(jQuery)),
  (window.theme = window.theme || {}),
  (theme.ResizeNavMega = (function () {
    return {
      init: function (e) {
        var t = {
            headerIsVisible:
              void 0 !== e
                ? "#header-ontop .main-header"
                : "#header .main-header",
            itemMega: ".i-megamn",
            contentItemMega: ".sub-mn",
          },
          n = $("#header .main-navigation").data("width"),
          i = $("#header .main-navigation").data("layout");
        if (theme.window_W > n && $(t.headerIsVisible).length > 0) {
          var o = $(t.headerIsVisible);
          if ("undefined" != o) {
            var a = 0;
            a = o.innerWidth();
            var r = o.offset().left,
              s = r + a;
            if ("vertical" === i) {
              var l =
                $(".vertical-menu .main-header").offset().top -
                $(window).scrollTop();
              $(t.headerIsVisible + " .mn-i[data-block]>.sub-mn").css({
                height: $(window).height(),
                "max-width": 0.8 * $(window).width(),
                top: -1 * l,
              });
            } else
              setTimeout(function () {
                $(t.headerIsVisible + " " + t.itemMega).each(function (e, n) {
                  if ($(n).hasClass("f-width"))
                    $(n)
                      .children(t.contentItemMega)
                      .css({ "max-width": theme.window_W + "px" }),
                      (l = $(n).offset().left),
                      $(n)
                        .children(t.contentItemMega)
                        .css("left", "-" + l + "px");
                  else {
                    $(n)
                      .children(t.contentItemMega)
                      .css({ "max-width": a + "px" });
                    var i = $(n).children(t.contentItemMega).outerWidth(),
                      o = $(n).outerWidth();
                    $(n)
                      .children(t.contentItemMega)
                      .css("left", "-" + (i / 2 - o / 2) + "px");
                    var l,
                      d = i / 2 > (l = $(n).offset().left) - r,
                      c = i / 2 + l > s;
                    if (
                      (d &&
                        ((p = l - r),
                        $(n)
                          .children(t.contentItemMega)
                          .css("left", -p + "px")),
                      c && !d)
                    ) {
                      var p = l - r;
                      (p -= a - i),
                        $(n)
                          .children(t.contentItemMega)
                          .css("left", -p + "px");
                    }
                  }
                }),
                  $(t.headerIsVisible + " .drop_to_right").each(function (
                    e,
                    t
                  ) {
                    var n = $(t).offset().left,
                      i = 550 > n - r,
                      o = 550 + n > s;
                    i &&
                      $(t)
                        .addClass("drop_to_right")
                        .removeClass("drop_to_left"),
                      o &&
                        !i &&
                        $(t)
                          .addClass("drop_to_left")
                          .removeClass("drop_to_right");
                  });
              }, 100);
          }
        }
      },
    };
  })(jQuery)),
  (window.theme = window.theme || {}),
  (theme.DropdownReposive = (function () {
    return {
      init: function (e, t, n) {
        var i = {
            headerIsVisibleDesktop: ".kt--drop-w-d",
            headerIsVisible: e,
            itemMega: t,
            contentItemMega: n,
          },
          o = i.headerIsVisibleDesktop;
        (theme.window_W <= 480 || $(i.headerIsVisible).innerWidth() <= 480) &&
          (o = i.headerIsVisible),
          $(o).length > 0 &&
            setTimeout(function () {
              $(i.itemMega).each(function (e, t) {
                var n = $(t).closest(o);
                if (n.length <= 0) return !0;
                if ($(t).find(i.contentItemMega).length <= 0) return !0;
                var a = $(t).find(i.contentItemMega).outerWidth();
                a > $(t).closest(i.headerIsVisible).outerWidth() &&
                  (a = $(t).closest(i.headerIsVisible).outerWidth());
                var r = n.innerWidth() < a ? a : n.innerWidth(),
                  s = n.offset();
                $(t)
                  .children(i.contentItemMega)
                  .css({ "max-width": r, left: "", right: "" });
                var l = $(t).children(i.contentItemMega).outerWidth(),
                  d = $(t).outerWidth();
                $(t)
                  .children(i.contentItemMega)
                  .css({ left: "-" + (l / 2 - d / 2) });
                var c = s.left,
                  p = c + r,
                  h =
                    n.innerWidth() < a
                      ? $(t).find(i.contentItemMega).offset().left
                      : $(t).offset().left,
                  m = l / 2 > h - c,
                  u = l + h > p;
                if (
                  (m &&
                    ((f = h - c),
                    $(t).children(i.contentItemMega).css({ left: -f })),
                  u && !m)
                ) {
                  var f = h - c;
                  if (
                    !(l / 2 > h + d - c) &&
                    $(t).find(i.contentItemMega).hasClass("inline")
                  ) {
                    var g = c + r - (h + d);
                    if (g + l > r) {
                      var v = r - g;
                      $(t).children(i.contentItemMega).css({ "max-width": v }),
                        (l = $(t).children(i.contentItemMega).outerWidth()),
                        (f += g);
                    } else f += g;
                  }
                  (f -= r - l),
                    $(t).children(i.contentItemMega).css({ left: -f });
                }
              });
            }, 100),
          !0 === theme.is_mobile
            ? $(i.itemMega).addClass("kt--drop-i-m").removeClass("kt--drop-i-d")
            : $(i.itemMega)
                .addClass("kt--drop-i-d")
                .removeClass("kt--drop-i-m");
      },
    };
  })()),
  (function () {
    function e(e) {
      var t = document.createElement("a");
      return (t.ref = e), t.hostname;
    }
    var t = $(".return-link");
    document.referrer &&
      t.length &&
      window.history.length &&
      t.one("click", function (t) {
        t.preventDefault();
        var n = e(document.referrer);
        return e(window.location.href) === n && history.back(), !1;
      });
  })(),
  (window.theme = theme || {}),
  (theme.customerTemplates = (function () {
    function e() {
      $("#RecoverPasswordForm").toggleClass("d-none"),
        $("#CustomerLoginForm").toggleClass("d-none");
    }
    return {
      init: function () {
        "#recover" === window.location.hash && e(),
          $("#accountModal").length > 0 &&
            $(document).on(
              "click",
              'a[href*="/account/login"], a[href*="/account/register"],[data-href*="/account/login"], [data-href*="/account/register"]',
              function (e) {
                if (
                  "/account" === $(this).attr("href") ||
                  "/account" === $(this).attr("data-href")
                )
                  return !1;
                e.preventDefault(), $("#accountModal").modal();
              }
            ),
          $(document).on("click", "#RecoverPassword", function (t) {
            t.preventDefault(), e();
          }),
          $(document).on("click", "#HideRecoverPasswordLink", function (t) {
            t.preventDefault(), e();
          }),
          $(".tab-trigger-link").on("click", function (e) {
            var t = $(this).attr("href");
            $(".nav-dashboard")
              .find('a[href="' + t + '"]')
              .trigger("click"),
              e.preventDefault();
          }),
          $(".reset-password-success").length > 0 &&
            $('#CustomerLoginForm [name="checkout_url"]').after(
              '<span class="mb-1">' +
                $(".reset-password-success").html() +
                "</span>"
            ),
          $(".reset-password-success").length &&
            $("#ResetSuccess").removeClass("d-none"),
          (function () {
            var e = $("#AddressNewForm");
            e.length &&
              (Shopify &&
                new Shopify.CountryProvinceSelector(
                  "AddressCountryNew",
                  "AddressProvinceNew",
                  { hideElement: "AddressProvinceContainerNew" }
                ),
              $(".address-country-option").each(function () {
                var e = $(this).data("form-id"),
                  t = "AddressCountry_" + e,
                  n = "AddressProvince_" + e,
                  i = "AddressProvinceContainer_" + e;
                new Shopify.CountryProvinceSelector(t, n, { hideElement: i });
              }),
              $(".address-new-toggle").on("click", function () {
                e.toggleClass("d-none");
              }),
              $(".address-edit-toggle").on("click", function () {
                var e = $(this).data("form-id");
                $("#EditAddress_" + e).toggleClass("d-none"),
                  $(this).closest(".col-toggle").toggleClass("col-lg-6");
              }),
              $(".address-delete").on("click", function () {
                var e = $(this),
                  t = e.data("form-id"),
                  n = e.data("confirm-message");
                confirm(n || "Are you sure you wish to delete this address?") &&
                  Shopify.postLink("/account/addresses/" + t, {
                    parameters: { _method: "delete" },
                  });
              }));
          })();
      },
    };
  })()),
  (window.theme = window.theme || {}),
  (theme.CollSection = (function () {
    return {
      init: function (e) {
        $(e).on(
          "click",
          ".show-pds, .show-list, .show-grid:not([data-col])",
          function () {
            $(".loadingFilter .d-none").removeClass("d-none");
            var t = $(this).attr("data-href");
            $(".ktjax").attr(
              "href",
              theme.Images.removeProtocol(window.location.href)
            ),
              $.ajax({
                type: "POST",
                url: Shopify.root_url + "/cart.js",
                data: { "attributes[theme_coll_layout]": t },
                dataType: "json",
                success: function (t) {
                  $.support.pjax
                    ? ($(".ktjax").trigger("click"), $(e).off())
                    : window.location.reload();
                },
              });
          }
        ),
          $(e).on("click", ".show-grid[data-col]", function () {
            $(".show-grid-list").css("pointer-events", "none");
            var e = $(this).attr("data-href");
            $.ajax({
              type: "POST",
              url: Shopify.root_url + "/cart.js",
              data: { "attributes[theme_coll_layout]": e },
              dataType: "json",
              success: function () {
                $(".product-listing img.lazyloaded").addClass("lazyload"),
                  $(".show-grid-list").css("pointer-events", "");
              },
            }),
              $(".show-grid[data-col]")
                .removeClass("active")
                .attr("data-ktpjax"),
              $(this).addClass("active"),
              $(".show-grid-list .layered_subtitle").html($(this).html()),
              $(".show-pds").each(function () {
                $(this).attr(
                  "data-href",
                  e.split("_")[0] + $(this).attr("data-pds")
                );
              });
            var t = $(".product-listing").attr("data-grid"),
              n = $(this).attr("data-col");
            $(".product-listing").attr({ "data-grid": n }),
              $(".product-listing li.grid-item").attr(
                "class",
                $(".product-listing li.grid-item").attr("class").replace(t, n)
              ),
              $('[data-section-type="masonry-prds-section"]').length > 0 &&
                $(".ly__ms_items").isotope({
                  itemSelector: ".grid-item",
                  masonry: { horizontalOrder: !0, percentPosition: !0 },
                  transitionDuration: ".8s",
                });
          });
      },
      infinityLoad: function () {
        var e = Math.max(
            document.documentElement.clientHeight,
            window.innerHeight || 0
          ),
          t = $('.kt--filter-js a[data-action="infinity"]').not(".loading")[0];
        void 0 !== t &&
          "none" !==
            getComputedStyle($(".kt--filter-js").find(".loadMore")[0])
              .display &&
          t.getBoundingClientRect().top <= e + 600 &&
          $(".kt--filter-js")
            .find('a[data-action="infinity"]')
            .trigger("click");
      },
    };
  })()),
  (theme.collPjax = function () {
    if (theme.extensions.ktjs_flts_or) {
      var e = document.createElement("link");
      (e.type = "xhr"),
        (e.rel = "prefetch"),
        (e.href =
          window.location.search.indexOf("?") >= 0
            ? window.location.search + "&view=multi_flts_or"
            : window.location.search + "?view=multi_flts_or"),
        (e.onload = function () {
          $(this).remove();
        }),
        headDocument.insertBefore(e, firstLink);
    }
    var t = $(".collection-products .btn-loadmore").attr("href");
    if (("" !== t) & (void 0 !== t)) {
      var n = document.createElement("link");
      (n.type = "xhr"),
        (n.rel = "prefetch"),
        (n.href = t + "&_pjax=.product-listing-loadmore"),
        (n.onload = function () {
          $(this).remove();
        }),
        headDocument.insertBefore(n, firstLink);
    }
    var i = !1,
      o = null;
    $(document).on("click", "a[data-pjax-filter]", function (e) {
      $.support.pjax &&
        ("loadmore" === $(this).attr("data-action") ||
        "infinity" === $(this).attr("data-action")
          ? ($.pjax.click(e, {
              container: ".product-listing-loadmore",
              fragment: ".product-listing",
              timeout: 4e3,
              scrollTo: !1,
              push: !1,
            }),
            $(this).text($(this).attr("data-text-loading")),
            (i = !0))
          : ($(".loadingFilter .d-none").removeClass("d-none"),
            $.pjax.click(e, {
              container: ".kt--filter-js",
              fragment: ".kt--filter-js",
              timeout: 4e3,
              scrollTo: !1,
            })),
        void 0 !== $(this).attr("data-scroll-top") &&
          ((o = !0),
          $('div[data-section-id="kt_collection_banner"]')
            .find("img")
            .css("opacity", 0.5)));
    }),
      theme.extensions.ktjs_flts_or &&
        $(document).on("pjax:click", function (e, t) {
          var n = document.createElement("link");
          (n.type = "xhr"),
            (n.rel = "prefetch"),
            (n.href =
              t.url.indexOf("?") >= 0
                ? t.url + "&view=multi_flts_or"
                : t.url + "?view=multi_flts_or"),
            (n.onload = function () {
              $(this).remove();
            }),
            headDocument.insertBefore(n, firstLink);
        }),
      $(document).on("pjax:success", function () {
        if (i) {
          var e = $(".product-listing .product-listing-loadmore").find(
            ".grid-item"
          ).length;
          $(".product-listing")
            .find(".product-listing-loadmore")
            .first()
            .addClass("removeElement"),
            $(".product-listing").append(
              $(".product-listing")
                .find(".product-listing-loadmore")
                .first()
                .html()
            ),
            $(".product-listing")
              .find(".product-listing-loadmore.removeElement")
              .first()
              .remove();
          var t = $(".CountEnd").first().text(),
            n = $(".AllCount").first().text(),
            a = $(".pagination_ [data-action]").first();
          if (((t = +t + e), $(".CountEnd").text(t), t < +n)) {
            var r = a.attr("data-page").replace("page_", "");
            theme.extensions.ktjs_flts_or
              ? a
                  .attr(
                    "href",
                    a
                      .attr("href")
                      .replace("page_" + r, "page_" + (+r + 1))
                      .replace("offp_" + offp_obj[r - 1], "offp_" + offp_obj[r])
                  )
                  .attr("data-page", "page_" + (+r + 1))
              : a
                  .attr(
                    "href",
                    a.attr("href").replace("page=" + r, "page=" + (+r + 1))
                  )
                  .attr("data-page", "page_" + (+r + 1));
          } else $(".pagination_ .loadMore").hide();
          a.removeClass("loading").text(a.attr("data-text-button")),
            $("#filterApply").html($(".result-count").html());
        } else if (1 == o)
          $("html").animate({ scrollTop: 0 }, "slow"), (o = !1);
        else {
          var s =
            0 !== $(".header.ontop").length
              ? $("#PageContainer").offset().top -
                2 * $(".header.ontop").height()
              : $("#PageContainer").offset().top - 100;
          $("html").animate({ scrollTop: s }, "slow");
        }
        if ($('[data-section-type="masonry-prds-section"]').length > 0 && i) {
          for (var l = t - e; l <= t; l++) {
            var d = $(".product-listing .grid-item:eq(" + l + ")");
            $(".product-listing").isotope("appended", d).isotope("layout");
          }
          theme.resize_card_grid();
        }
        i = !1;
        var c = $(".collection-products .btn-loadmore").attr("href");
        if (("" !== c) & (void 0 !== c)) {
          var p = document.createElement("link");
          (p.rel = "prefetch"),
            (p.href = c + "&_pjax=.product-listing-loadmore"),
            (p.onload = function () {
              $(this).remove();
            }),
            headDocument.insertBefore(p, firstLink);
        }
        if (
          (1 == theme.function.multiCurrency &&
            null !== localStorageCurrency &&
            localStorageCurrency !== shopCry &&
            Kt_currency.convertAll(shopCry, localStorageCurrency, "span.money"),
          $(".spr-badge").length > 0 && "function" == typeof window.SPR)
        )
          return (
            window.SPR.registerCallbacks(),
            window.SPR.initRatingHandler(),
            window.SPR.initDomEls(),
            window.SPR.loadProducts(),
            window.SPR.loadBadges()
          );
      }),
      $(document).on("pjax:complete", function (e, t, n, i) {
        var o = new theme.Sections();
        o.register("masonry-prds-section", theme.PrdsMasonrySection),
          $('[data-section-type="collection-template"]').off(),
          $(".kt--filter-js").off(),
          o.register("collection-filter", theme.Filters),
          o.register("collection-template", theme.CollSection.init),
          KT.fixGridSwatch(),
          theme.DropdownReposive.init(
            ".kt--drop-w",
            ".kt--drop-i",
            ".kt--drop-in"
          ),
          $(".loadingFilter .card").length > 0 &&
            $(".loadingFilter .card").addClass("d-none").removeClass("bottom"),
          $(".kt--filter.kt_canvas.opend-overlay").length <= 0 &&
            $("#bg-overlay").trigger("click");
      });
  }),
  (window.theme = window.theme || {}),
  (theme.HeaderSection = (function () {
    function e(e) {
      theme.MenuReposive.init(), theme.ResizeNavMega.init();
      if ($(".close-header-announcement").length) {
        "hide" !== sessionStorage.getItem("announcement") &&
          $(".header-announcement").slideDown("400"),
          $(document).on("click", ".close-header-announcement", function (e) {
            $(".header-announcement").slideUp("400"),
              sessionStorage.setItem("announcement", "hide");
          });
      }
      $(e).find(".swiper-container").length > 0 &&
        theme.SwiperSection('[data-section-type="header-section"]');
    }
    return (
      (e.prototype = _.assignIn({}, e.prototype, {
        onUnload: function () {
          theme.MenuReposive.unload();
        },
        onSelect: function (e) {},
        onBlockSelect: function (e) {
          $(".show-submn").removeClass("show-submn"),
            $(".mn-lv1").removeClass("active"),
            $(e.target).addClass("show-submn active");
        },
        onBlockDeselect: function (e) {
          $(".show-submn").removeClass("show-submn"),
            $(".mn-lv1").removeClass("active");
        },
      })),
      e
    );
  })()),
  (window.theme = window.theme || {}),
  (theme.MegamnVerticalSection = (function () {
    function e(e) {}
    return (
      (e.prototype = _.assignIn({}, e.prototype, {
        onUnload: function (e) {
          $(e.target).removeClass("on-edit");
        },
        onSelect: function (e) {
          $(e.target).addClass("on-edit");
        },
        onDeselect: function (e) {
          $(e.target).removeClass("on-edit");
        },
        onBlockSelect: function (e) {
          $(".show-submn").removeClass("show-submn"),
            $(".mn-lv1").removeClass("active"),
            $(e.target).hasClass(".i-megamn.--vt")
              ? $(e.target).addClass("show-submn active")
              : $(e.target).closest(".i-megamn.--vt").length > 0 &&
                $(e.target)
                  .closest(".i-megamn.--vt")
                  .addClass("show-submn active");
        },
        onBlockDeselect: function (e) {
          $(".show-submn").removeClass("show-submn"),
            $(".mn-lv1").removeClass("active");
        },
      })),
      e
    );
  })()),
 
  (window.theme = window.theme || {}),
  (theme.HeaderMbSection = (function () {
    function e(e) {
      $(document).on("click", ".mmenu-btn", function (e) {
        
        var t = $(this).closest("li"),
          n = t.find("ul").eq(0);
        t.hasClass("open")
          ? n.slideUp(300, function () {
           
              t.removeClass("open");
            })
          : n.slideDown(300, function () {
           
              t.addClass("open");
            }),

          e.stopPropagation(),
          e.preventDefault();
      }),
      $(document).on("click", ".my-mmenu-btn", function (e) {
        var t = $(this).closest("li"),
          n = t.find("ul").eq(0);
        t.hasClass("open")
          ? n.slideUp(300, function () {
              t.removeClass("open");
            })
          : n.slideDown(300, function () {
              t.addClass("open");
            }),
          e.stopPropagation(),
          e.preventDefault();
      }),
        $(document).on("click", ".menu-toggle", function () {
          $("body").addClass("mmenu-active"),
            $("#bg-overlay")
              .addClass("menu-mb-overlay")
              .removeClass("menu-overlay"),
            $('.nav-link[data-type="item_menu"]').length > 0 &&
              $('.nav-link[data-type="item_menu"]').first().trigger("click");
        }),
        $(document).on(
          "click touchstart",
          ".mobile-menu-close, #bg-overlay.menu-mb-overlay",
          function () {
            $("body").removeClass("mmenu-active"),
              anime({
                targets: "#bg-overlay.menu-mb-overlay",
                backgroundColor: "rgba(0,0,0,0)",
                duration: 300,
                easing: "linear",
                complete: function (e) {
                  $("#bg-overlay").removeAttr("style class");
                },
              });
          }
        );
    }
    return (
      (e.prototype = _.assignIn({}, e.prototype, {
        onUnload: function () {},
        onSelect: function (e) {
          $("body").addClass("mmenu-active"),
            $("#bg-overlay")
              .addClass("menu-mb-overlay")
              .removeClass("menu-overlay");
        },
        onDeselect: function (e) {
          $("body").removeClass("mmenu-active"),
            anime({
              targets: "#bg-overlay.menu-mb-overlay",
              backgroundColor: "rgba(0,0,0,0)",
              duration: 300,
              easing: "linear",
              complete: function (e) {
                $("#bg-overlay").removeAttr("style class");
              },
            });
        },
        onBlockSelect: function (e) {},
        onBlockDeselect: function (e) {},
      })),
      e
    );
  })()),
  
  (theme.videoPopup = function (e) {
    -1 !== e.indexOf(".mp4")
      ? $.magnificPopup.open({
          items: [
            {
              src:
                '<div class="white-popup"><div class="white-popupcontent"><video class="amp-page amp-video-element" id="myVideo_product" controls="controls" autoplay><source type="video/mp4" src="' +
                e +
                '"></video></div></div>',
              type: "inline",
            },
          ],
          type: "image",
        })
      : (-1 === e.indexOf("youtube.com") &&
          -1 === e.indexOf("youtu.be.com") &&
          -1 === e.indexOf("vimeo.com")) ||
        $.magnificPopup.open({
          items: [{ src: e, type: "iframe" }],
          type: "image",
        });
  }),
  (window.theme = theme || {}),
  (theme.Swiper = (function () {
    return {
      init: function (e) {
        var t = $(e);
        t.find(".shopify-section").length > 0 &&
          t.find(".shopify-section").children().unwrap(),
          t.find(".swiper-container").each(function () {
            function e() {
              var e = n.swiper,
                t = ($(n), $(n).parent());
              e.slides.length > e.params.slidesPerView &&
                (e.params.nav
                  ? t.addClass("swiper-container-has-nav")
                  : t.removeClass("swiper-container-has-nav"),
                e.params.dots
                  ? t.addClass("swiper-container-has-dot")
                  : t.removeClass("swiper-container-has-dot"),
                e.params.noOverflow
                  ? t.addClass("swiper-no-overflow")
                  : t.removeClass("swiper-no-overflow")),
                t.find(".swiper-pagination-outside").length > 0 &&
                  t.addClass("swiper-pagination-outside"),
                e.params.spaceBetween <= 0 &&
                  $(n).css({
                    paddingRight: 1,
                    paddingLeft: 1,
                    marginRight: 1,
                    marginLeft: 1,
                  });
            }
            if ($(this).hasClass("swiper-container-initialized")) return !0;
            var n = this,
              i = $(this).data();
            (i.watchOverflow = !0),
              (i.a11y = !1),
              (i.watchSlidesVisibility = !0),
              i.nav &&
                ((i.navigation = {
                  nextEl: ".swiper-button-next",
                  prevEl: ".swiper-button-prev",
                }),
                i.nextEl &&
                  "" !== i.nextEl &&
                  (i.navigation = { nextEl: i.nextEl, prevEl: i.prevEl })),
              i.dots &&
                (i.pagination = { el: ".swiper-pagination", type: "bullets" }),
              i.autoplay && void 0 !== i.delay
                ? (i.autoplay = { delay: 1e3 * i.delay })
                : i.autoplay && (i.autoplay = { delay: 7e3 }),
              i.scrollbar &&
                (i.scrollbar = { el: ".swiper-scrollbar", draggable: !0 }),
              i.noOverflow &&
                ((i.loop = !0),
                (i.loopAdditionalSlides = 2),
                (i.loopFillGroupWithBlank = 2)),
              (i.on = {
                init: function (i) {
                  e();
                  var o = n.swiper,
                    a = $(o.slides[o.activeIndex]);
                  a.find(".bgndVideo").length > 0 &&
                    KT.loadScript("YTPlayer", function (e, t) {
                      "ok" == t &&
                        a
                          .find(".bgndVideo")
                          .YTPlayer({
                            containment: a.find(".bgndVideo").parent(),
                          });
                    }),
                    i.slides.length > 0 && $(i.el).addClass("has-its"),
                    $(n).find(".kt_pin[data-product-handle]").length > 0 &&
                      KT.loadScript("tippy", function (e, t) {
                        "ok" == t &&
                          $.each(
                            $(n).find(".kt_pin[data-product-handle]"),
                            function (e, t) {
                              tippy(this, {
                                content: function (e) {
                                  return $(e)
                                    .parents(".kt_pins")
                                    .find(
                                      '.kt_pin_pritem[data-product-handle="' +
                                        $(e).attr("data-product-handle") +
                                        '"]'
                                    )[0].outerHTML;
                                },
                                allowHTML: !0,
                                sticky: !0,
                                interactive: !0,
                              });
                            }
                          );
                      }),
                    t.find(".btn-iframe").length > 0 &&
                      KT.loadScript("magnific-popup", function (e, n) {
                        "ok" == n &&
                          $.each(t.find(".btn-iframe"), function (e, t) {
                            $(this).on("click", function (e) {
                              e.preventDefault(),
                                theme.videoPopup($(this).attr("href"));
                            });
                          });
                      });
                },
                slideChange: function () {
                  "function" == typeof jQuery.fn.YTPlayer &&
                    $.each($(n).find(".bgndVideo.mb_YTPlayer"), function () {
                      $(this).YTPPause();
                    });
                  var e = n.swiper,
                    t = $(e.slides[e.activeIndex]);
                  e.$el
                    .find(".lazyloading:not(.lazyload):not([data-include])")
                    .addClass("lazyload"),
                    t.find(".bgndVideo.mb_YTPlayer").length > 0 &&
                      t.find(".bgndVideo.mb_YTPlayer").YTPPlay(),
                    t.find(".bgndVideo:not(.mb_YTPlayer)").length > 0 &&
                      KT.loadScript("YTPlayer", function (e, n) {
                        "ok" == n &&
                          t
                            .find(".bgndVideo")
                            .YTPlayer({
                              containment: t.find(".bgndVideo").parent(),
                            });
                      });
                },
                resize: function () {
                  $.debounce(250, function () {
                    e();
                  })();
                },
                observerUpdate: function (t) {
                  e(), t.slides.length > 0 && $(t.el).addClass("has-its");
                },
              }),
              new Swiper(this, i);
          });
      },
      initSwiperMobile: function () {},
    };
  })()),
  (theme.swiper = {}),
  (theme.SwiperSection = (function () {
    return function (e) {
      (this.$container = $(e)),
        KT.loadScript("swiper", function (t, n) {
          "ok" == n && theme.Swiper.init(e);
        });
    };
  })()),
  (theme.SwiperSection.prototype = _.assignIn(
    {},
    theme.SwiperSection.prototype,
    {
      onSelect: function (e) {},
      onUnload: function () {
        delete theme.swiper[this.container];
      },
      onBlockSelect: function (e) {
        var t = $(this.container).find(".swiper-container")[0].swiper;
        if (void 0 !== t) {
          var n =
            1 == $(e.target).hasClass("slide_i")
              ? $(e.target)
              : $(e.target).parent();
          t.slideTo(n.index());
        }
      },
      onBlockDeselect: function () {
        var e = $(this.container).find(".swiper-container")[0].swiper;
        void 0 !== e &&
          !0 === $(this.container).find(".swiper-container").data("autoplay") &&
          e.autoplay.start();
      },
    }
  )),
  (window.theme = theme || {}),
  (theme.PrdsMasonrySection = (function () {
    return function (e) {
      var t = (this.$container = $(e)).attr("data-section-id"),
        n = (this.masonry = "#Masonry-" + t);
      KT.loadScript("isotope", function (e, t) {
        "ok" == t &&
          ($(n + " .ly__ms_items").on("arrangeComplete", function () {
            $(n + " .ly__ms_items").addClass("isotoped");
          }),
          $(n + " .ly__ms_items").isotope({
            itemSelector: ".ly__ms",
            layoutMode: "packery",
            packery: { horizontalOrder: !0, percentPosition: !0 },
            transitionDuration: ".4s",
          }),
          theme.resize_card_grid());
      });
    };
  })()),
  (window.theme = theme || {}),
  (theme.MasonrySection = (function () {
    return function (e) {
      var t = (this.$container = $(e)).attr("data-section-id"),
        n = (this.masonry = "#Masonry-" + t);
      KT.loadScript("isotope", function (e, t) {
        "ok" == t &&
          $(n).isotope({
            itemSelector: ".masonry-item",
            layoutMode: "packery",
            packery: { horizontalOrder: !0, percentPosition: !0 },
            transitionDuration: "0.8s",
          });
      });
    };
  })()),
  (window.theme = theme || {}),
  (theme.portfolioMasorySection = (function () {
    function e(e) {
      var t = (this.$container = $(e)),
        n = (t.attr("data-section-id"), t.attr("data-container")),
        i = t.attr("data-filter"),
        o = t.attr("data-items");
      KT.loadScript("isotope", function (e, t) {
        if ("ok" == t) {
          var a = $(i),
            r = $(n);
          !(function () {
            r.data("layoutmode"), r.isotope({ itemSelector: o });
            var e = r.find(o);
            r.addClass("show-items").isotope("revealItemElements", e);
          })(),
            a.find("a").on("click", function (e) {
              var t = $(this),
                n = t.attr("data-filter");
              a.find(".active").removeClass("active"),
                r.isotope({ filter: n, transitionDuration: "0.7s" }),
                t.closest("li").addClass("active"),
                e.preventDefault();
            });
        }
      });
    }
    return { MasorySection: e };
  })()),
  (window.theme = theme || {}),
  (theme.Instagram = (function () {
    function e(e) {
      var t = (this.$container = $(e)).attr("data-section-id"),
        n = $("#shopify-section-" + t + " .instagramWrapper"),
        i = n.data(),
        o =
          !0 === n.data("use-slide")
            ? " swiper-slide"
            : " col-6 col-sm-4 col-md-3 col-lg-3 col-xl-2-10",
        a = "",
        r = 0,
        s = new Array(),
        l = new Array();
      if ("" != i.accessToken) {
        var d = function (e) {
            $.each(e, function (e, t) {
              if (t.children)
                $.each(t.children.data, function (e, n) {
                  r < i.limit &&
                    (a +=
                      '<div class="item' +
                      o +
                      " order-" +
                      ++r +
                      '"><a class="instagram-feed insta_' +
                      n.id +
                      ' fkt-instagram" href="' +
                      t.permalink +
                      '" style="padding-bottom: 100%;"></a></div>');
                }),
                  s.push(t.id);
              else if ("VIDEO" === t.media_type && r < i.limit) {
                r++;
                n = t.thumbnail_url;
                (a += '<div class="item' + o + " order-" + r + '">'),
                  (a +=
                    '<a class="instagram-feed lazyload fkt-instagram prev" href="' +
                    t.permalink +
                    '" style="padding-bottom: 100%;" data-bgset="' +
                    n +
                    '">'),
                  (a +=
                    '<span id="vd_p_' +
                    t.id +
                    '" class="fkt-play" onclick="$(\'#vd_' +
                    t.id +
                    '\')[0].play();$(this).remove()" style="position: absolute;z-index: 2;left: 50%;top: 50%;margin-left: -1.4rem;margin-top: -2.95rem;cursor: pointer;font-size: 3.2rem;color: #fff;"></span>'),
                  (a +=
                    '<video id="vd_' +
                    t.id +
                    '" loop style="position: absolute;top: 0;left: 0;width: 100%;height: 100%;"><source src="' +
                    t.media_url +
                    '" type="video/mp4"></video>'),
                  (a += "</a>"),
                  (a += "</div>");
              } else if (r < i.limit) {
                r++;
                var n = t.media_url || t.thumbnail_url;
                a +=
                  '<div class="item' +
                  o +
                  " order-" +
                  r +
                  '"><a class="instagram-feed lazyload fkt-instagram" href="' +
                  t.permalink +
                  '" style="padding-bottom: 100%;" data-bgset="' +
                  n +
                  '"></a></div>';
              }
            });
          },
          c = function (e) {
            $.each(e, function (e, t) {
              $(".insta_" + t.id)
                .attr("data-bgset", t.media_url)
                .addClass("lazyload");
            });
          },
          p = function () {
            $("#instagramWrapper-" + t)
              .append(a)
              .show(0),
              n.find("li:empty").remove(),
              (!0 !== i.useSlide && "true" !== i.useSlide) ||
                theme.SwiperSection(e),
              (!0 !== i.useMasonry && "true" !== i.useMasonry) ||
                KT.loadScript("isotope", function (e, n) {
                  if ("ok" == n)
                    $("#instagramWrapper-" + t).isotope({
                      itemSelector: ".item",
                      layoutMode: "packery",
                      packery: { horizontalOrder: !0, percentPosition: !0 },
                      transitionDuration: ".4s",
                    });
                });
          },
          h = sessionStorage.getItem("instaMedias");
        if (null !== h) {
          d(JSON.parse(h)), p();
          null !== (l = sessionStorage.getItem("childrenMedias")) &&
            $.each(JSON.parse(l), function (e, t) {
              c(t);
            }),
            $(".fkt-instagram").on("click", function (e) {
              $(this).hasClass("prev") &&
                (e.preventDefault(), $(this).removeClass("prev"));
            });
        } else
          $.ajax({
            url:
              "//graph.instagram.com/me/media?fields=caption,id,media_type,media_url,permalink,thumbnail_url,children&access_token=" +
              i.accessToken,
            type: "GET",
            dataType: "json",
          })
            .done(function (e) {
              var t = e.data;
              void 0 !== i.tag &&
                "" !== i.tag &&
                (t = t.filter(function (e) {
                  return e.caption.indexOf("#" + i.tag) >= 0;
                })),
                d(t),
                sessionStorage.setItem("instaMedias", JSON.stringify(t));
            })
            .fail(function () {
              $("#instagramWrapper-" + t).hide();
            })
            .always(function () {
              p(),
                $.each(s, function (e, t) {
                  $.ajax({
                    url:
                      "//graph.instagram.com/" +
                      t +
                      "/children?fields=media_url,permalink,thumbnail_url&access_token=" +
                      i.accessToken,
                    type: "GET",
                    dataType: "json",
                  })
                    .fail(function () {
                      console.log("error load children");
                    })
                    .always(function (e) {
                      var t = e.data;
                      c(t),
                        l.push(t),
                        sessionStorage.setItem(
                          "childrenMedias",
                          JSON.stringify(l)
                        );
                    });
                });
            });
      } else $("#instagramWrapper-" + t).hide();
    }
    return e;
  })()),
  (theme.ktCountdown = function (e) {
    var t = void 0 !== e ? "#" + $(e).attr("id") + " " : "";
    if (
      ((t = "#undefined " !== t ? t : ""), $(t + ".kt_countdown").length > 0)
    ) {
      KT.loadScript("countdown", function (e, n) {
        "ok" == n &&
          $(t + ".kt_countdown:not(.cd-initialized)").each(function () {
            var e = $(this);
            e.addClass("cd-initialized");
            var t =
              '<div class="block cdhrs"><span class="flip-top">00</span><span class="label">' +
              theme.strings.cdhrs +
              '</span></div><span class="sign">:</span>';
            (t +=
              '<div class="block cdmins"><span class="flip-top">00</span><span class="label">' +
              theme.strings.cdmin +
              '</span></div><span class="sign">:</span>'),
              (t +=
                '<div class="block cdsecs"><span class="flip-top">00</span><span class="label">' +
                theme.strings.cdsecs +
                "</span></div>");
            var n =
              '<div class="block cdday"><span class="flip-top">00</span><span class="label">' +
              theme.strings.cdday +
              '</span></div><span class="sign">:</span>' +
              t;
            if (e.hasClass("kt_loop_bar")) {
              var i = parseInt(theme.timenow.h),
                o = parseInt(theme.timenow.i),
                a = parseInt(theme.timenow.s),
                r = 60 * i * 60 + 60 * o + a,
                s = Math.ceil(86400 / r),
                l = [
                  "01",
                  "02",
                  "03",
                  "04",
                  "05",
                  "06",
                  "07",
                  "08",
                  "09",
                  "10",
                  "11",
                  "12",
                ];
              if (theme.function.countdown_timezone)
                var d = theme.timenow.timeNow,
                  c = parseInt(theme.timenow.hNow),
                  p = parseInt(theme.timenow.iNow),
                  h = parseInt(theme.timenow.sNow);
              else
                var d =
                    (y = new Date()).getFullYear() +
                    "/" +
                    l[y.getMonth()] +
                    "/" +
                    y.getDate(),
                  c = y.getHours(),
                  p = y.getMinutes(),
                  h = y.getSeconds();
              var m = function (e) {
                  var t = e,
                    n = Math.floor(t / 3600);
                  t -= 3600 * n;
                  var i = Math.floor(t / 60);
                  return (
                    (t -= 60 * i),
                    (n < 10 ? "0" + n : n) +
                      ":" +
                      (i < 10 ? "0" + i : i) +
                      ":" +
                      (t < 10 ? "0" + t : t)
                  );
                },
                u = function () {
                  for (var e = 1; e < s + 1; e++) {
                    if (60 * c * 60 + 60 * p + h < r * e)
                      return r * e < 86400 ? r * e : 86400;
                  }
                };
              if (void 0 !== u() || null !== u()) {
                var f = m(u());
                if ("24:00:00" === f) {
                  y = new Date(d);
                  (k = new Date(y)).setDate(y.getDate() + 1),
                    (d =
                      k.getFullYear() +
                      "/" +
                      l[k.getMonth()] +
                      "/" +
                      (k.getDate() < 10 ? "0" + k.getDate() : k.getDate())),
                    (f = m(86400 == r ? r - 1 : r));
                }
                e.html(t);
                var g = e.find(".cdhrs .flip-top"),
                  v = e.find(".cdmins .flip-top"),
                  w = e.find(".cdsecs .flip-top"),
                  _ = 0;
                theme.function.countdown_timezone
                  ? KT.loadScript("moment", function (t, n) {
                      "ok" == n &&
                        KT.loadScript("moment-zone", function (t, n) {
                          if ("ok" == n) {
                            var i = moment.tz(d + " " + f, theme.timezone);
                            e.countdown(i.toDate())
                              .on("update.countdown", function (t) {
                                g.text(t.strftime("%H")),
                                  v.text(t.strftime("%M")),
                                  w.text(t.strftime("%S")),
                                  0 === _ &&
                                    (_++, e.parent().addClass("showOn"));
                              })
                              .on("finish.countdown", function (t) {
                                e.parent().remove();
                              });
                          }
                        });
                    })
                  : e
                      .countdown(Date.parse(d + " " + f))
                      .on("update.countdown", function (t) {
                        g.text(t.strftime("%H")),
                          v.text(t.strftime("%M")),
                          w.text(t.strftime("%S")),
                          0 === _ && (_++, e.parent().addClass("showOn"));
                      })
                      .on("finish.countdown", function (t) {
                        e.parent().remove();
                      });
              }
            } else {
              d = e.data("time");
              if (-1 !== "24:00:00".indexOf(d)) {
                var y = new Date(d),
                  k = new Date(y);
                k.setDate(y.getDate() + 1);
                l = [
                  "01",
                  "02",
                  "03",
                  "04",
                  "05",
                  "06",
                  "07",
                  "08",
                  "09",
                  "10",
                  "11",
                  "12",
                ];
                d =
                  k.getFullYear() +
                  "/" +
                  l[k.getMonth()] +
                  "/" +
                  k.getDate() +
                  " 00:00:00";
              }
              e.html(n);
              var b = e.find(".cdday .flip-top"),
                g = e.find(".cdhrs .flip-top"),
                v = e.find(".cdmins .flip-top"),
                w = e.find(".cdsecs .flip-top"),
                _ = 0;
              theme.function.countdown_timezone
                ? KT.loadScript("moment", function (t, n) {
                    "ok" == n &&
                      KT.loadScript("moment-zone", function (t, n) {
                        "ok" == n &&
                          e
                            .countdown(moment.tz(d, theme.timezone).toDate())
                            .on("update.countdown", function (t) {
                              b.text(t.strftime("%-D")),
                                g.text(t.strftime("%H")),
                                v.text(t.strftime("%M")),
                                w.text(t.strftime("%S")),
                                0 === _ && (_++, e.parent().addClass("showOn"));
                            })
                            .on("finish.countdown", function (t) {
                              e.parent().remove();
                            });
                      });
                  })
                : e
                    .countdown(Date.parse(d))
                    .on("update.countdown", function (t) {
                      b.text(t.strftime("%-D")),
                        g.text(t.strftime("%H")),
                        v.text(t.strftime("%M")),
                        w.text(t.strftime("%S")),
                        0 === _ && (_++, e.parent().addClass("showOn"));
                    })
                    .on("finish.countdown", function (t) {
                      e.parent().remove();
                    });
            }
          });
      });
    }
  }),
  (window.theme = theme || {}),
  (theme.BannerSection = (function () {
    return function (e) {
      theme.ktCountdown(e);
    };
  })()),
  (window.theme = theme || {}),
  (theme.BannerVideoSection = (function () {
    return function (e) {
      var t = $(e);
      t.find(".btn-iframe").length > 0
        ? KT.loadScript("magnific-popup", function (e, n) {
            "ok" == n &&
              $.each(t.find(".btn-iframe"), function (e, t) {
                $(this).on("click", function (e) {
                  e.preventDefault(), theme.videoPopup($(this).attr("href"));
                });
              });
          })
        : t.find(".bgndVideo").length > 0 &&
          KT.loadScript("YTPlayer", function (e, n) {
            "ok" == n &&
              t
                .find(".bgndVideo")
                .YTPlayer({
                  containment: t.find(".bgndVideo").parent(),
                  optimizeDisplay: !0,
                });
          });
    };
  })()),
  (theme.variantChange = function () {
    function e(e, t, n, i, o) {
      var a = "",
        r = _.find(i, { id: e }) || _.find(i, { title: t }),
        s = theme.function.productGridOptionStyle,
        l = s.find(function (e) {
          return e.name == r.p_options[1];
        }),
        d = s.find(function (e) {
          return e.name == r.p_options[2];
        });
      if ("Opt1Js" === n) {
        u = _.filter(i, { option1: r.option1 });
        if (r.option2) {
          var c = "",
            p = new Array(),
            h = "",
            m = new Array();
          _.forEach(u, function (e) {
            if (-1 == _.indexOf(p, e.option2) && r.option1 == e.option1) {
              p.push(e.option2);
              var t =
                  null !== (s = e.featured_image ? e.featured_image.src : null)
                    ? s.split(".")[s.split(".").length - 1]
                    : null,
                n =
                  null !== s &&
                  void 0 !== l &&
                  l.color_watched &&
                  "color" !== l.sw_style
                    ? "style=\"background-image: url('" +
                      s
                        .replace("." + t, "_100x100_crop_center." + t)
                        .replace(/http(s)?:/, "") +
                      "')\""
                    : "",
                i = r.option2 == e.option2 ? " active" : "",
                o = p.length > 5;
              (c +=
                '<li class="swatch-on-grid _' +
                _handleize(e.option2) +
                i +
                '" data-toggle="tooltip" data-placement="top" title="' +
                e.option2 +
                '" data-available="' +
                e.available +
                '" data-maybe-hide="' +
                o +
                '">'),
                (c +=
                  '<span class="swatch" data-vrS="kt_' +
                  _handleize(e.option2) +
                  '" data-opt="Opt2Js" data-vrId=' +
                  e.id +
                  ' data-available="' +
                  e.available +
                  '" title="' +
                  e.title.replace('"', "&quot;") +
                  '"' +
                  n +
                  ">"),
                (c +=
                  '<span class="swatch-title">' +
                  e.option2 +
                  '</span><span class="comma">,</span>'),
                (c += "</span></li>");
            }
            if (r.option3) {
              if (r.id == e.id) {
                m.push(e.option3);
                var t =
                    null !==
                    (s = e.featured_image ? e.featured_image.src : null)
                      ? s.split(".")[s.split(".").length - 1]
                      : null,
                  n =
                    null !== s &&
                    void 0 !== d &&
                    d.color_watched &&
                    "color" !== d.sw_style
                      ? "style=\"background-image: url('" +
                        s
                          .replace("." + t, "_100x100_crop_center." + t)
                          .replace(/http(s)?:/, "") +
                        "')\""
                      : "",
                  a = m.length > 5;
                (h +=
                  '<li class="swatch-on-grid _' +
                  _handleize(e.option3) +
                  ' active" data-toggle="tooltip" data-placement="top" title="' +
                  e.option3 +
                  '" data-available="' +
                  e.available +
                  '" data-maybe-hide="' +
                  a +
                  '">'),
                  (h +=
                    '<span class="swatch" data-vrS="kt_' +
                    _handleize(e.option3) +
                    '" data-opt="Opt3Js" data-vrId=' +
                    e.id +
                    ' data-available="' +
                    e.available +
                    '" title="' +
                    e.title.replace('"', "&quot;") +
                    '"' +
                    n +
                    ">"),
                  (h +=
                    '<span class="swatch-title">' +
                    e.option3 +
                    '</span><span class="comma">,</span>'),
                  (h += "</span></li>");
              }
              if (
                -1 == _.indexOf(m, e.option3) &&
                r.option1 === e.option1 &&
                r.option2 === e.option2 &&
                r.option3 !== e.option3
              ) {
                m.push(e.option3);
                var s = e.featured_image ? e.featured_image.src : null,
                  t = null !== s ? s.split(".")[s.split(".").length - 1] : null,
                  n =
                    null !== s &&
                    void 0 !== d &&
                    d.color_watched &&
                    "color" !== d.sw_style
                      ? "style=\"background-image: url('" +
                        s
                          .replace("." + t, "_100x100_crop_center." + t)
                          .replace(/http(s)?:/, "") +
                        "')\""
                      : "",
                  a = m.length > 5;
                (h +=
                  '<li class="swatch-on-grid _' +
                  _handleize(e.option3) +
                  '" data-toggle="tooltip" data-placement="top" title="' +
                  e.option3 +
                  '" data-available="' +
                  e.available +
                  '" data-maybe-hide="' +
                  a +
                  '">'),
                  (h +=
                    '<span class="swatch" data-vrS="kt_' +
                    _handleize(e.option3) +
                    '" data-opt="Opt3Js" data-vrId=' +
                    e.id +
                    ' data-available="' +
                    e.available +
                    '" title="' +
                    e.title.replace('"', "&quot;") +
                    '"' +
                    n +
                    ">"),
                  (h +=
                    '<span class="swatch-title">' +
                    e.option3 +
                    '</span><span class="comma">,</span>'),
                  (h += "</span></li>");
              }
            }
            e.option1 == r.option1 &&
              e.featured_image &&
              (s = e.featured_image.src);
          }),
            p.length > 5 &&
              (c +=
                '<li class="swatch-on-grid more kt_view_qs"><span class="swatch"><span class="swatch-title">' +
                theme.productStrings.viewMoreVariants +
                "+</span></span> </li>"),
            m.length > 5 &&
              (h +=
                '<li class="swatch-on-grid more kt_view_qs"><span class="swatch"><span class="swatch-title">' +
                theme.productStrings.viewMoreVariants +
                "+</span></span> </li>"),
            o
              .closest(".product-inner")
              .find('[data-opt="Opt2Js"] .content__variants_list')
              .html(c),
            o
              .closest(".product-inner")
              .find('[data-opt="Opt3Js"] .content__variants_list')
              .html(h);
        }
      }
      if ("Opt2Js" === n) {
        var u = _.filter(i, { option1: r.option1 });
        if (3 == parseInt(o.data("options"))) {
          var h = "",
            m = new Array();
          _.forEach(u, function (e) {
            if (r.id == e.id) {
              m.push(e.option3);
              t = m.length > 5;
              (h +=
                '<li class="swatch-on-grid _' +
                _handleize(e.option3) +
                ' active" data-toggle="tooltip" data-placement="top" title="' +
                e.option3 +
                '" data-available="' +
                e.available +
                '" data-maybe-hide="' +
                t +
                '">'),
                (h +=
                  '<span class="swatch" data-vrS="kt_' +
                  _handleize(e.option3) +
                  '" data-opt="Opt3Js" data-vrId=' +
                  e.id +
                  ' data-available="' +
                  e.available +
                  '" title="' +
                  e.title.replace('"', "&quot;") +
                  '">'),
                (h +=
                  '<span class="swatch-title">' +
                  e.option3 +
                  '</span><span class="comma">,</span>'),
                (h += "</span></li>");
            }
            if (
              -1 === _.indexOf(m, e.option3) &&
              r.option1 === e.option1 &&
              r.option2 === e.option2
            ) {
              m.push(e.option3);
              var t = m.length > 5;
              (h +=
                '<li class="swatch-on-grid _' +
                _handleize(e.option3) +
                '" data-toggle="tooltip" data-placement="top" title="' +
                e.option3 +
                '" data-available="' +
                e.available +
                '" data-maybe-hide="' +
                t +
                '">'),
                (h +=
                  '<span class="swatch" data-vrS="kt_' +
                  _handleize(e.option3) +
                  '" data-opt="Opt3Js" data-vrId=' +
                  e.id +
                  ' data-available="' +
                  e.available +
                  '" title="' +
                  e.title.replace('"', "&quot;") +
                  '">'),
                (h +=
                  '<span class="swatch-title">' +
                  e.option3 +
                  '</span><span class="comma">,</span>'),
                (h += "</span></li>");
            }
            e.option1 == r.option1 &&
              e.featured_image &&
              (a = e.featured_image.src);
          }),
            m.length > 5 &&
              (h +=
                '<li class="swatch-on-grid more kt_view_qs"><span class="swatch"><span class="swatch-title">' +
                theme.productStrings.viewMoreVariants +
                "+</span></span> </li>"),
            o
              .closest(".product-inner")
              .find('[data-opt="Opt3Js"] .content__variants_list')
              .html(h);
        }
      }
      var f = o.closest(".product-inner"),
        g = f.find(".add_to_cart_button"),
        v = f.find(".primary-thumb img"),
        w = void 0 != v.attr("src") ? v.attr("src").split(",")[0] : void 0;
      void 0 == w &&
        (w =
          void 0 != v.attr("srcset") ? v.attr("srcset").split(",")[0] : void 0);
      var y = !1;
      if (
        (r.featured_image &&
          void 0 != w &&
          (y =
            w
              .split("/")
              .slice(-1)[0]
              .indexOf(theme.Images.getName(r.featured_image.src)) < 0),
        !0 === y)
      ) {
        var a = r.featured_image.src,
          k = _.last(a.split(".")),
          b =
            '<div class="primary-thumb"><img width="' +
            r.featured_image.width +
            '" height="' +
            r.featured_image.height +
            '" class="lazyload ' +
            theme.Images.imgFit(
              r.featured_image.width,
              r.featured_image.height
            ) +
            '"';
        (b +=
          'src="' +
          theme.Images.removeProtocol(a.replace("." + k, "_270x." + k)) +
          '"'),
          (b +=
            'data-src="' +
            theme.Images.removeProtocol(a.replace("." + k, "_{width}x." + k)) +
            '"'),
          (b += 'data-widths="[270, 360, 540, 720]"'),
          (b += 'data-sizes="auto"'),
          (b += 'alt="' + r.featured_image.alt + '"></div>'),
          f.find(".aspectRatio").append(b),
          f.find(".primary-thumb").first().remove(),
          f.find(".second-thumb").first().remove(),
          g.removeClass("loading");
      } else g.removeClass("loading");
      var C = f.find('[class*="ProductPrice-"]').data("id"),
        S = f.find(".ProductVaries-" + C),
        x = f.find(".ProductPrice-" + C),
        T = f.find(".ComparePrice-" + C),
        P = f.find(".UnitPrice-" + C);
      if (
        (S.addClass("d-none"),
        x
          .html(theme.Currency.formatMoney(r.price, theme.moneyFormat))
          .removeClass("d-none"),
        r.compare_at_price > r.price
          ? (T.length < 0 &&
              (x.after('<del class="ComparePrice-' + C + '"></del>'),
              (T = f.find('[class*="ComparePrice-"]'))),
            T.html(
              theme.Currency.formatMoney(r.compare_at_price, theme.moneyFormat)
            ).removeClass("d-none"))
          : void 0 != T && T.addClass("d-none"),
        r.unit_price)
      ) {
        M =
          r.unit_price_measurement.quantity_value +
          r.unit_price_measurement.quantity_unit;
        (M +=
          ' (<span class="unit_price">' +
          theme.Currency.formatMoney(r.unit_price, theme.moneyFormat) +
          "</span> / "),
          (M += '<span class="base_unit">'),
          r.unit_price_measurement &&
            (1 != r.unit_price_measurement.reference_value &&
              (M += r.unit_price_measurement.reference_value),
            (M += r.unit_price_measurement.reference_unit)),
          (M += "</span>"),
          (M += "</span>)"),
          P.length < 0 &&
            ((T || x).after('<del class="UnitPrice-' + C + '"></del>'),
            (P = f.find(".UnitPrice-" + C))),
          P.html(M).removeClass("d-none");
      } else void 0 != P && P.addClass("d-none");
      if (
        (f.find('input[name="id"]').val(r.id),
        f.find(".add_to_cart_button").attr("data-vrid", r.id),
        1 == theme.function.multiCurrency &&
          null !== localStorageCurrency &&
          localStorageCurrency !== shopCry &&
          Kt_currency.convertAll(shopCry, localStorageCurrency, "span.money"),
        r.available
          ? (g.prop("disabled", !1).removeClass("sold_out disabled"),
            r.incoming
              ? f
                  .find(".add_to_cart_button span")
                  .html(theme.productStrings.preOrder)
              : f
                  .find(".add_to_cart_button span")
                  .html(theme.productStrings.addToCart))
          : (g.prop("disabled", !0).addClass("sold_out disabled"),
            f
              .find(".add_to_cart_button span")
              .html(theme.productStrings.soldOut)),
        o.parents(".kt-stickyAddCart.fixed").length > 0 &&
          $(".kt-stickyAddCart").hasClass("fixed"))
      ) {
        JSON.parse(
          document.getElementById("ProductJson-product-template").innerHTML
        );
        $("#ProductSection-product-template .fake_select li").removeClass(
          "selected"
        ),
          $(r.options).each(function (e, t) {
            var n = t,
              i = $(
                "#ProductSection-product-template option[value='" + n + "']"
              ).val(),
              o = $(
                "#ProductSection-product-template option[value='" + n + "']"
              ).parent();
            $(
              '#ProductSection-product-template .fake_select li[data-value="' +
                n +
                '"]'
            ).addClass("selected"),
              $(
                'label[data-change-label="SglOptSelector-' +
                  e +
                  '--product-template"] .text'
              ).text(n),
              i != o.val() && o.val(i).change();
          });
      }
      if (o.parents(".table-compare").length > 0) {
        var C = (f = o.parents(".table-compare"))
            .find('[class*="ProductPrice-"]')
            .data("id"),
          S = f.find(".ProductVaries-" + C),
          x = f.find(".ProductPrice-" + C),
          T = f.find(".ComparePrice-" + C),
          P = f.find(".UnitPrice-" + C);
        if (
          (x.html(theme.Currency.formatMoney(r.price, theme.moneyFormat)),
          r.compare_at_price > r.price
            ? (T.length < 0 &&
                (x.after('<del class="ComparePrice-' + C + '"></del>'),
                (T = f.find('[class*="ComparePrice-"]'))),
              T.html(
                theme.Currency.formatMoney(
                  r.compare_at_price,
                  theme.moneyFormat
                )
              ).show())
            : void 0 != T && T.hide(),
          r.unit_price)
        ) {
          var M =
            r.unit_price_measurement.quantity_value +
            r.unit_price_measurement.quantity_unit;
          (M +=
            ' (<span class="unit_price">' +
            theme.Currency.formatMoney(r.unit_price, theme.moneyFormat) +
            "</span> / "),
            (M += '<span class="base_unit">'),
            r.unit_price_measurement &&
              (1 != r.unit_price_measurement.reference_value &&
                (M += r.unit_price_measurement.reference_value),
              (M += r.unit_price_measurement.reference_unit)),
            (M += "</span>"),
            (M += "</span>)"),
            P.length < 0 &&
              ((T || x).after('<del class="UnitPrice-' + C + '"></del>'),
              (P = f.find(".UnitPrice-" + C))),
            P.html(M).removeClass("d-none");
        } else void 0 != P && P.addClass("d-none");
        r.available
          ? f
              .find(".Availability-" + C)
              .text(theme.productStrings.inStock)
              .addClass("in_stock")
          : f
              .find(".Availability-" + C)
              .text(theme.productStrings.outOfStock)
              .removeClass("in_stock"),
          1 == theme.function.multiCurrency &&
            null !== localStorageCurrency &&
            localStorageCurrency !== shopCry &&
            Kt_currency.convertAll(shopCry, localStorageCurrency, "span.money");
      }
      o
        .closest(".product-inner")
        .find('[data-opt="Opt1Js"] .n_selected')
        .html(r.option1),
        o
          .closest(".product-inner")
          .find('[data-opt="Opt2Js"] .n_selected')
          .html(r.option2),
        o
          .closest(".product-inner")
          .find('[data-opt="Opt3Js"] .n_selected')
          .html(r.option3),
        o.trigger({ type: "variantChange", variant: r });
    }
    $(document).on(
      "click",
      ".product-loop-variants .swatch-on-grid:not(.more) .swatch",
      function (t) {
        var n = $(this).attr("data-view"),
          i = $(this),
          o = i.closest(".product-inner").find("form[data-section-id]").last();
        o
          .closest(".product-inner")
          .find(".add_to_cart_button")
          .addClass("loading"),
          o
            .closest(".product-inner")
            .find('[data-opt="' + i.data("opt") + '"] .variants_list li.active')
            .removeClass("active"),
          i.parent().addClass("active");
        var a = o
            .closest(".product-inner")
            .find('[data-opt="Opt1Js"] .variants_list li.active')
            .attr("title"),
          r = o
            .closest(".product-inner")
            .find('[data-opt="Opt2Js"] .variants_list li.active')
            .attr("title"),
          s = o
            .closest(".product-inner")
            .find('[data-opt="Opt3Js"] .variants_list li.active')
            .attr("title"),
          l =
            a +
            (void 0 !== r ? " / " + r : "") +
            (void 0 !== s ? " / " + s : "");
        void 0 == theme.psjson_lib[o.data("p-id")]
          ? $.ajax({ url: n + "?view=vrsjson", type: "GET" })
              .done(function (t) {
                (theme.psjson_lib[o.data("p-id")] = JSON.parse(
                  t.replace(/<!--.*?-->/g, "")
                )),
                  e(
                    i.data("vrid"),
                    l,
                    i.data("opt"),
                    theme.psjson_lib[o.data("p-id")],
                    o
                  );
              })
              .fail(function () {})
              .always(function () {})
          : e(
              i.data("vrid"),
              l,
              i.attr("data-opt"),
              theme.psjson_lib[o.data("p-id")],
              o
            );
      }
    );
  }),
  (theme.card_grid_size = (function () {
    return {
      init: function () {
        theme.card_grid_size.check(),
          $(window).resize($.throttle(250, theme.card_grid_size.resize));
      },
      check: function () {
        $(".product-card.--card").each(function () {
          var e = $(this);
          if (e.is(":visible")) {
            e.removeClass("--card");
            var t = e.width();
            e.removeClass("ssmallCard smallCard normalCard largeCard hugeCard"),
              t > 550
                ? e.addClass("hugeCard")
                : t > 350
                ? e.addClass("largeCard")
                : t <= 240 && t > 180
                ? e.addClass("smallCard")
                : t <= 180
                ? e.addClass("ssmallCard smallCard")
                : e.addClass("normalCard");
          }
        });
      },
      resize: function () {
        $(".smallCard,.normalCard,.largeCard,.hugeCard").addClass("--card"),
          theme.card_grid_size.check();
      },
    };
  })()),
  (theme.Quantity = function () {
    $(document).on("click", ".quantity-up, .qtyplus", function (e) {
      e.preventDefault();
      var t = $(this).closest(".quantity").find("input.input-qty"),
        n = (t.attr("data-min"), t.attr("data-max")),
        i = parseFloat(t.val());
      if (i >= n) o = i;
      else {
        var o = i + 1;
        t.val(o).trigger("change");
      }
    }),
      $(document).on("click", ".quantity-down, .qtyminus", function (e) {
        e.preventDefault();
        var t = $(this).closest(".quantity").find("input.input-qty"),
          n = t.attr("data-min") || 0,
          i = (t.attr("data-max"), parseFloat(t.val()));
        if (i <= n) o = i;
        else {
          var o = i - 1;
          t.val(o).trigger("change");
        }
      }),
      $(document).on("change", ".quantity input.input-qty", function () {
        var e = $(this),
          t = e.attr("max");
        parseFloat(e.val()) > parseFloat(t) &&
          e.val(parseFloat(t)).trigger("change"),
          $(this).parents("form").length > 0 &&
            $(this)
              .parents("form")
              .find('input[type="hidden"][name="quantity"]')
              .remove();
      });
  }),
  (theme.initPhotoSwipeFromDOM = function (e, t, n, i) {
    $(".pswp").removeAttr("style");
    for (
      var o = $(e),
        a = function (i) {
          (i = i || window.event).preventDefault
            ? i.preventDefault()
            : (i.returnValue = !1);
          var o = (function e(t, n) {
            return t && (n(t) ? t : e(t.parentNode, n));
          })(i.target || i.srcElement, function (e) {
            return e.tagName && e.tagName.toUpperCase() === n;
          });
          if (o) {
            for (
              var a,
                s = $(o).parents(e),
                l = s.find(t + " [data-size]"),
                d = l.length,
                c = 0,
                p = 0;
              p < d;
              p++
            ) {
              if (l[p] === o) {
                a = c;
                break;
              }
              c++;
            }
            return a >= 0 && r(a, s), !1;
          }
        },
        r = function (e, n, o, a) {
          var r,
            s,
            l,
            d = $(".pswp")[0];
          if (
            ((l = (function (e) {
              var n = $(e).find(t + " [data-size]"),
                i = [];
              return (
                _.forEach(n, function (e, t) {
                  var n = new Object();
                  (n.src = $(e).attr("data-srcfix")),
                    (n.w = $(e).attr("data-size").split("x")[0]),
                    (n.h = $(e).attr("data-size").split("x")[1]),
                    i.push(n);
                }),
                i
              );
            })(n)),
            (s = {
              history: !1,
              focus: !1,
              galleryUID: $(n).attr("data-pswp-uid"),
              getThumbBoundsFn: function (e) {
                var i = $(n).find(t + " [data-size]")[e],
                  o = window.pageYOffset || document.documentElement.scrollTop,
                  a = i.getBoundingClientRect();
                return { x: a.left, y: a.top + o, w: a.width };
              },
              shareButtons: [
                {
                  id: "facebook",
                  label: "Share on Facebook",
                  url: "https://www.facebook.com/sharer/sharer.php?u={{url}}",
                },
                {
                  id: "twitter",
                  label: "Tweet",
                  url: "https://twitter.com/intent/tweet?text={{text}}&url={{url}}",
                },
                {
                  id: "pinterest",
                  label: "Pin it",
                  url: "http://www.pinterest.com/pin/create/button/?url={{url}}&media={{image_url}}&description={{text}}",
                },
              ],
            }),
            a)
          )
            if (s.galleryPIDs) {
              for (var c = 0; c < l.length; c++)
                if (l[c].pid == e) {
                  s.index = c;
                  break;
                }
            } else s.index = parseInt(e, 10) - 1;
          else s.index = parseInt(e, 10);
          isNaN(s.index) ||
            (o && (s.showAnimationDuration = 0),
            (r = new PhotoSwipe(d, PhotoSwipeUI_Default, l, s)).init(),
            r.listen("afterChange", function () {
              i(r.getCurrentIndex(), r.currItem);
            }));
        },
        s = 0,
        l = o.length;
      s < l;
      s++
    )
      o[s].setAttribute("data-pswp-uid", s + 1), (o[s].onclick = a);
  }),
  (theme.imgs360 = function (e, t, n, i, o) {
    var a = t[1] - t[0],
      r =
        '<section class="modal fade md_qvModalThreeSixty kt_630-' +
        o +
        '" aria-hidden="false" role="dialog" tabindex="-1" data-vr-id="' +
        o +
        '" data-total-frames="' +
        a +
        '" data-end-frames="' +
        a +
        '" data-files="' +
        e +
        '" data-width="' +
        n +
        '" data-height="' +
        i +
        '"> <div class="modal-dialog modal-dialog-centered modal-lg modal-xl"> <div class="modal-content"> <button class="close" aria-label="Close" data-dismiss="modal" type="button"> <span aria-hidden="true">×</span> </button> <div class="content-item"> <div class="threesixty productThreeSixty"> <div class="spinner"> <span>0%</span> </div><ol class="threesixty_images"></ol> </div></div></div></div></section>';
    $("body").append(r);
    var s = $(".kt_630-" + o);
    $(document).on("click", "button.kt_open360_" + o, function (e) {
      if ((s.modal(), s.find(".threesixty_images li").length > 0)) return !1;
      var t = {
        totalFrames: s.attr("data-total-frames"),
        endFrame: s.attr("data-end-frames"),
        currentFrame: 1,
        imgList: ".threesixty_images",
        progress: ".spinner",
        imgArray: s.attr("data-files").split(","),
        width: s.attr("data-width"),
        height: s.attr("data-height"),
        responsive: !0,
        navigation: !0,
      };
      s.find(".productThreeSixty").ThreeSixty(t);
    }),
      s.on("hidden.bs.modal", function () {
        s.find(".nav_bar_stop").trigger("click");
      });
  }),
  (window.theme = theme || {}),
  (theme.cookiesPopup = (function () {
    return function (e) {
      var t = $(".kt-cookies-popup");
      setTimeout(function () {
        t.addClass("popup-display"),
          t.on("click", ".cookies-accept-btn", function (e) {
            e.preventDefault(), n();
          });
      }, 2500);
      var n = function () {
        t.removeClass("popup-display").addClass("popup-hide"),
          localStorage.setItem("kt_cookies", "accepted");
      };
      "accepted" == localStorage.getItem("kt_cookies") &&
        t.removeClass("popup-display").addClass("popup-hide");
    };
  })()),
  (theme.cookiesPopup.prototype = _.assignIn({}, theme.cookiesPopup.prototype, {
    onSelect: function (e) {
      localStorage.removeItem("kt_cookies"),
        $(".kt-cookies-popup")
          .addClass("popup-display")
          .removeClass("popup-hide");
    },
  })),
  (window.theme = theme || {}),
  (theme.lookBook = (function () {
    return function (e) {
      var t = (this.$container = $(e));
      t.attr("data-section-id"),
        KT.loadScript("tippy", function (e, n) {
          "ok" == n &&
            $.each(t.find(".kt_pin[data-product-handle]"), function (e, t) {
              tippy(this, {
                content: function (e) {
                  return $(
                    '.kt_pin_pritem[data-product-handle="' +
                      $(e).attr("data-product-handle") +
                      '"]'
                  )[0].outerHTML;
                },
                allowHTML: !0,
                sticky: !0,
                interactive: !0,
              });
            });
        });
    };
  })()),
  (theme.wokerktlz = (function () {
    function e(e) {
      var t = new Blob([localStorage.getItem("workerktlz")], {
        type: "text/javascript",
        async: !0,
      });
      theme.myWorker = new Worker(window.URL.createObjectURL(t));
      if (void 0 === theme.myWorker) return !0;
      n(e);
    }
    function t(t, i, o) {
      (t = void 0 == t ? "onVisible" : t),
        (i = void 0 == i ? 300 : i),
        (o = void 0 == o ? 1 : o);
      var a = !1,
        r = function () {
          return void 0 !== document.documentElement &&
            document.documentElement.scrollTop
            ? document.documentElement.scrollTop
            : void 0 !== document.body
            ? document.body.scrollTop
            : void 0;
        },
        s = function (e) {
          if (!e) return 0;
          for (var t = e.offsetTop, n = e; (n = n.offsetParent); )
            t += n.offsetTop;
          return t;
        };
      return (
        (a = !0),
        void $.each($(".ktlz"), function (l, d) {
          var c = this;
          if (
            !(function (e) {
              var n = e.getAttribute("data-ktlz");
              switch ((null !== n && (t = n), t)) {
                case "onLoad":
                  if (a) return !0;
                case "onVisible":
                  return (
                    !(function (e) {
                      return o && (e.offsetWidth <= 0 || e.offsetHeight <= 0);
                    })(e) &&
                    r() - i <= s(e) &&
                    s(e) <=
                      (void 0 !== self.innerHeight
                        ? self.innerHeight
                        : void 0 !== document.documentElement &&
                          void 0 !== document.documentElement.clientHeight
                        ? document.documentElement.clientHeight
                        : void 0 !== document.body
                        ? document.body.clientHeight
                        : void 0) +
                        r() +
                        i
                  );
                case "instant":
                default:
                  return !0;
              }
            })(c) ||
            $(c).hasClass("ktlz-loaded") ||
            void 0 === $(c).attr("data-href")
          )
            return !0;
          theme.myWorker
            ? n(c)
            : KT.checkVersion("workerktlz") && !theme.function.variantsLoad
            ? ((theme.function.variantsLoad = !0),
              $.ajax({
                url: theme.extensions.workerktlz,
                type: "GET",
                dataType: "html",
              })
                .done(function (e) {
                  KT.pushVersion("workerktlz"),
                    localStorage.setItem("workerktlz", e);
                })
                .fail(function () {})
                .always(function () {
                  e(c);
                }))
            : theme.function.variantsLoad ||
              ((theme.function.variantsLoad = !0), e(c));
        })
      );
    }
    function n(e) {
      var t = $(e);
      theme.myWorker.onmessage = function (e) {
        var t = $(".ktlz-form-pid-" + e.data.pId);
        $.each(t, function (t, n) {
          var i = $(this);
          i
            .find(".prd--option1")
            .html(e.data.html.option1)
            .removeClass("animated-background"),
            i
              .find(".prd--option2")
              .html(e.data.html.option2)
              .removeClass("animated-background"),
            i
              .find(".prd--option3")
              .html(e.data.html.option3)
              .removeClass("animated-background"),
            (theme.psjson_lib[e.data.pId] = e.data.pJson.variants),
            i.find('[name="id"]').length <= 0 &&
              !0 !== i.data("noneid") &&
              i.append(e.data.html.input),
            "function" == typeof $.fn.tooltip &&
              i.find('[data-toggle="tooltip"]').tooltip(),
            $.each(currTags_handleize, function (e, t) {
              if (0 === t.indexOf("color:")) {
                t = t.split(":")[1].split(",")[0];
                return (
                  i.find(".swatch-on-grid._" + t + " .swatch").trigger("click"),
                  i
                    .find(".swatch-on-grid._" + t + '[data-maybe-hide="true"]')
                    .attr("data-maybe-hide", !1),
                  !0
                );
              }
              if (0 === t.indexOf("color-"))
                return (
                  i
                    .find(
                      ".swatch-on-grid._" + t.replace("color-", "") + " .swatch"
                    )
                    .trigger("click"),
                  i
                    .find(
                      ".swatch-on-grid._" +
                        t.replace("color-", "") +
                        '[data-maybe-hide="true"]'
                    )
                    .attr("data-maybe-hide", !1),
                  !0
                );
            }),
            i.trigger({ type: "variantsLoaded", variant: e.data.variant });
        });
      };
      var n = {
        rootUrl: Shopify.shop_url,
        handleProduct: t.attr("data-href"),
        prdOptsStyle: theme.function.productGridOptionStyle,
        currentVariant: t.find('input[name="id"]').val() || null,
        moreText: theme.productStrings.viewMoreVariants,
      };
      theme.myWorker.postMessage(n), t.removeClass("ktlz").add("ktlz-loaded");
    }
    return {
      init: function () {
        theme.wokerktlz.load(),
          $(window).resize($.throttle(100, theme.wokerktlz.load)),
          $(window, ".modal-open .modal").scroll(
            $.throttle(100, theme.wokerktlz.load)
          );
      },
      load: t,
    };
  })()),
  (theme.resize_card_grid = function (e) {
    var t = new MutationObserver(function (e) {
      $(".ly__ms_items").isotope("layout");
    });
    $.each($(".product-body:not(.on_live)"), function (e, n) {
      t.observe(this, { childList: !0, subtree: !0 }),
        $(this).addClass("on_live");
    });
  }),
  (theme.lazyListener = function (e) {
    var t = void 0 !== e ? e + " " : "";
    document.addEventListener("lazyincluded", function (e) {
      e.detail.content &&
        ($(e.target).find(".shopify-section").children().unwrap(),
        (function (e) {
          var t = e;
          if (
            (t.find(".shopify-section").children().length <= 0 &&
              t.find(".shopify-section").remove(),
            t.find(".shopify-section").children().unwrap(),
            t.find('[data-section-type="swiper-section"]').length > 0
              ? theme.SwiperSection(
                  t.find('[data-section-type="swiper-section"]')[0]
                )
              : "function" == typeof KT.countdown && KT.countdown(),
            theme.wokerktlz.load(),
            1 == theme.function.multiCurrency &&
              null !== localStorageCurrency &&
              localStorageCurrency !== shopCry &&
              Kt_currency.convertAll(
                shopCry,
                localStorageCurrency,
                "span.money"
              ),
            t.find("[data-respon]").length > 0 &&
              KT.respSpaceSc(t.find("[data-respon]")),
            $(".tab-content").removeClass("including").css("height", ""),
            t.find('[name="checkout_url"]').length > 0 &&
              t.find('[name="checkout_url"]').val(t.data("checkout-url")),
            $(".spr-badge").length > 0 && "function" == typeof window.SPR)
          )
            window.SPR.registerCallbacks(),
              window.SPR.initRatingHandler(),
              window.SPR.initDomEls(),
              window.SPR.loadProducts(),
              window.SPR.loadBadges();
        })($(e.target)));
    }),
      $.each($(t + "[data-include]:not(.lazyloaded)"), function (e, t) {
        this.addEventListener("lazyincludloaded", function (e) {
          -1 != e.detail.content.indexOf("\x3c!--lz_sc--\x3e") &&
            (e.detail.content =
              e.detail.content.split("\x3c!--lz_sc--\x3e")[1]);
        });
      });
  }),
  (window.theme = theme || {}),
  (theme.cookiesPopup = (function () {
    return function (e) {
      var t = $(".kt-cookies-popup");
      setTimeout(function () {
        t.addClass("popup-display"),
          t.on("click", ".cookies-accept-btn", function (e) {
            e.preventDefault(), n();
          });
      }, 2500);
      var n = function () {
        t.removeClass("popup-display").addClass("popup-hide"),
          localStorage.setItem("kt_cookies", "accepted");
      };
      "accepted" == localStorage.getItem("kt_cookies") &&
        t.removeClass("popup-display").addClass("popup-hide");
    };
  })()),
  (theme.cookiesPopup.prototype = _.assignIn({}, theme.cookiesPopup.prototype, {
    onSelect: function (e) {
      localStorage.removeItem("kt_cookies"),
        $(".kt-cookies-popup")
          .addClass("popup-display")
          .removeClass("popup-hide");
    },
  })),
  (window.theme = theme || {}),
  (theme.ageVerModal = (function () {
    return function (e) {
      var t = $("#ageVerModal");
      t.on("show.bs.modal", function (e) {}),
        t.on("hidden.bs.modal", function (e) {
          sessionStorage.setItem("ageVer", "hide"),
            $("html").removeClass("ageVerModal"),
            $("#hideforever_ageVer").is(":checked")
              ? localStorage.setItem("ageVer", "hide")
              : localStorage.removeItem("ageVer");
        }),
        "hide" !== ageVer && t.modal({ backdrop: "static" }),
        $(document).on("click", ".verification-failed-btn", function (e) {
          e.preventDefault(),
            $(".verification-failed").show(),
            t.find(".btn,p,.custom-control").hide();
        });
    };
  })()),
  (theme.ageVerModal.prototype = _.assignIn({}, theme.ageVerModal.prototype, {
    onSelect: function (e) {
      localStorage.removeItem("ageVer"),
        sessionStorage.removeItem("ageVer"),
        $("#ageVerModal").modal({ backdrop: "static" });
    },
  })),
  (window.theme = theme || {}),
  (theme.FooterSection = (function () {
    return function (e) {
      var t = "footer .widget-title:not(.not_drop)";
      theme.window_W < 576 && $(t).addClass("onHide"),
        $(document).on("click", t, function (e) {
          theme.window_W >= 576 ||
            (e.preventDefault(),
            $(this).next().toggle("slideUp"),
            $(this).toggleClass("onHide"));
        });
    };
  })()),
  (theme.toast = function ({
    title: e = "",
    message: t = "",
    type: n = "info",
    duration: i = 3e3,
  }) {
    const o = document.getElementById("toast");
    if (o) {
      const a = document.createElement("div"),
        r = setTimeout(function () {
          o.removeChild(a);
        }, i + 1e3);
      a.onclick = function (e) {
        e.target.closest(".toast__close") &&
          (o.removeChild(a), clearTimeout(r));
      };
      const s = {
          success:
            '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="svg-icon bi bi-check-circle-fill" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/></svg>',
          error:
            '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="svg-icon bi bi-exclamation-circle-fill" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"/></svg>',
        }[n],
        l = (i / 1e3).toFixed(2);
      a.classList.add("toast", `toast--${n}`),
        (a.style.animation = `slideInLeft ease .3s, fadeOut linear 1s ${l}s forwards`),
        (a.innerHTML =
          `<div class="toast__icon">${s}</div>` +
          '<div class="toast__body">' +
          `<h3 class="toast__title">${e}</h3><p class="toast__msg">${t}</p>` +
          '</div><div class="toast__close"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="svg-icon bi bi-x" viewBox="0 0 16 16"><path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/></svg></div>'),
        o.appendChild(a);
    }
  }),
  $(document).ready(function () {
    theme.lazyListener(),
      (theme.is_mobile = theme.MenuReposive.is_mobile()),
      (theme.window_W = $(window).width()),
      (theme.window_H = $(window).height());
    var e = new theme.Sections();
    e.register("header-section", theme.HeaderSection),
      e.register("mega_mn-vertical", theme.MegamnVerticalSection),
      e.register("header-mobile-section", theme.HeaderMbSection),
      e.register("swiper-section", theme.SwiperSection),
      e.register("product", theme.Product),
      e.register("store-availability", theme.StoreAvailability),
      e.register("collection-template", theme.CollSection.init),
      e.register("collection-filter", theme.Filters),
      e.register("masonry-section", theme.MasonrySection),
      e.register("instagram-section", theme.Instagram),
      e.register("banner-section", theme.BannerSection),
      e.register("banner-video-section", theme.BannerVideoSection),
      e.register("countdown-section", theme.ktCountdown),
      e.register("countto-section", theme.ktCountTo),
      e.register("masonry-prds-section", theme.PrdsMasonrySection),
      e.register(
        "portfolio-masonry",
        theme.portfolioMasorySection.MasorySection
      ),
      e.register("kt-cookies", theme.cookiesPopup),
      e.register("kt-ageVer", theme.ageVerModal),
      e.register("kt-lookbook", theme.lookBook),
      e.register("footer-section", theme.FooterSection),
      theme.variantChange(),
      theme.Quantity(),
      theme.DropdownReposive.init(".kt--drop-w", ".kt--drop-i", ".kt--drop-in"),
      Shopify.designMode ||
        (theme.gadget.cookies_infor &&
          "accepted" !== localStorage.getItem("kt_cookies") &&
          "password" !== templateName &&
          $.ajax({
            url: Shopify.root_url + "/?section_id=cookies_popup",
            type: "GET",
            dataType: "html",
          }).done(function (t) {
            $(".content_for_extension").append(t),
              e.register("kt-cookies", theme.cookiesPopup);
          })),
      KT.loadScript("color_sw", function (e, t) {}),
      KT.loadScript("molla_icon", function (e, t) {}),
      KT.loadScript("molla_font", function (e, t) {}),
      "" !== theme.link_google_f &&
        KT.loadScript("google_f", function (e, t) {}),
      $('[data-section-type="collection-filter"]').length > 0 &&
        KT.loadScript("pjax", function (e, t) {
          "ok" == t && theme.collPjax();
        }),
      theme.card_grid_size.init(),
      theme.wokerktlz.init();
    new MutationObserver(
      $.throttle(200, function (e, t) {
        var n = !1;
        for (i = 0; i < e.length; i++) {
          var o = e[i].target.outerHTML;
          if (
            (o.includes("ktlz") && (theme.wokerktlz.load(), (n = !0)),
            o.includes("--card") && (theme.card_grid_size.check(), (n = !0)),
            n)
          )
            return !1;
        }
      })
    ).observe(document.querySelector("body"), {
      attributes: !0,
      childList: !0,
      subtree: !0,
    });
  }),
  $(window).on("resize", function () {
    (theme.is_mobile = theme.MenuReposive.is_mobile()),
      (theme.window_W = $(window).width()),
      (theme.window_H = $(window).height()),
      $("#header-ontop .ResizedNavMegaScroll").length > 0 &&
        $("#header-ontop .ResizedNavMegaScroll").removeClass(
          "ResizedNavMegaScroll"
        ),
      $(".kt--filter-grs-m").length > 0 &&
        (theme.window_W >= 768 && "" != $(".kt--filter-grs-m").html()
          ? $(".kt--filter-grs-d").html($(".kt--filter-grs-m").html())
          : theme.window_W < 768 &&
            "" != $(".kt--filter-grs-d").html() &&
            $(".kt--filter-grs-m").html($(".kt--filter-grs-d").html())),
      theme.ResizeNavMega.init(),
      theme.DropdownReposive.init(".kt--drop-w", ".kt--drop-i", ".kt--drop-in");
  }),
  $(window).scroll(function () {
    ((theme.window_W < 768 && !theme.attrTheme) ||
      (theme.window_W >= 768 && theme.attrTheme)) &&
      (theme.attrTheme ? (theme.attrTheme = !1) : (theme.attrTheme = !0),
      $.ajax({
        type: "POST",
        url: Shopify.root_url + "/cart.js",
        data: { "attributes[theme_mobile]": theme.attrTheme },
        dataType: "json",
      }));
  }),
  $('.kt--filter-js a[data-action="infinity"]').length > 0 &&
    KT.loadScript("pjax", function (e, t) {
      "ok" == t &&
        ($('.kt--filter-js a[data-action="infinity"]').addClass("listened"),
        $(window).scroll($.throttle(250, theme.CollSection.infinityLoad)));
    }),
  $("#header-ontop .header").length <= 0 &&
    !0 === $("[data-header-sticky]").data("header-sticky") &&
    ($(window).scroll($.throttle(250, theme.MenuReposive.clone_header_ontop)),
    $(window).resize($.throttle(250, theme.MenuReposive.clone_header_ontop))),
  (theme.init = function () {
    theme.customerTemplates.init(),
      $(document).on("click", 'a[href="#"]', function (e) {
        e.preventDefault();
      }),
      $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" }),
      Shopify.designMode &&
        createPagesByTheme &&
        (theme.csrfToken
          ? theme.createPages()
          : $.ajax({
              type: "GET",
              url: "/admin/themes/" + Shopify.theme.id,
              success: function (e) {
                (theme.csrfToken = e
                  .split('name="csrf-token"')[1]
                  .split(" />")[0]
                  .split('"')[1]),
                  theme.createPages();
              },
            }),
        (theme.createPages = function () {
          [
            {
              title: "Vertical menu Builder",
              handle: "vertical-menu",
              template_suffix: "vertical-menu",
            },
            {
              title: "Products Wishlist",
              handle: "wishlist",
              template_suffix: "wishlist",
            },
            {
              title: "Products Wishlist Local",
              handle: "wishlist-local",
              template_suffix: "wishlist-local",
            },
            {
              title: "Edit additional information",
              handle: "edit-additional-information",
              template_suffix: "prd-additional",
            },
          ].forEach(function (e) {
            $.ajax({
              url: "/admin/api/2021-07/pages.json",
              headers: {
                "content-type":
                  "application/x-www-form-urlencoded; charset=UTF-8",
                "x-csrf-token": theme.csrfToken,
              },
              type: "POST",
              data: { page: e },
              success: function (t) {
                console.log("Success page: " + e.title);
              },
              error: function (t) {
                console.log("error page: " + e.title);
              },
            });
          });
        })),
      Shopify.designMode &&
        (theme.cartAttributes.length > 1 &&
          $.ajax({
            type: "POST",
            url: Shopify.root_url + "/cart.js",
            data: {
              attributes: {
                theme_align: "",
                theme_light: "",
                theme_coll_layout: "",
              },
            },
            dataType: "json",
            success: function () {},
          }),
        "the4" === theme.role &&
          window.parent.$ &&
          window.parent.$.ajax({
            type: "PUT",
            url:
              window.parent.location.pathname.split("/themes/")[0] +
              "/api/2021-07/themes/" +
              Shopify.theme.id +
              ".json",
            dataType: "json",
            data: { theme: { id: Shopify.theme.id, role: "unpublished" } },
            success: function (e) {},
          }));
  }),
  $(theme.init);
